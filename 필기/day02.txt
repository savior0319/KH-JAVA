@프로젝트 
 이클립스의 프로젝트  의미는 하나의 큰 작업이라고 보면 됨
	- 하나의 작품
	- 여러개의 패키지가 존재하는 공간
	* 프로젝트 명은 낙타 표기법
	

@패키지
 패키지는 프로젝트 안에 존재하는 하나의 디렉토리
 	- 패키지(디렉토리) 안에 다양한 클래스 파일이 존재함
	* 패키지명은 모두 소문자


@클래스
 실제 소스코드가 들어 있는 파일
	* 클래스명은 첫글자가 대문자 이며 구분마다 첫글자는 대문자(파스칼 표기법)


@자바의 이름 표기법

1. 카멜 표기법 
 - 카멜 표기법은 자바에서 시작 된 표기법
 - 변수명 혹은 프로젝트 명을 작성할 시 단어와 단어가 만날때 뒤에 있는 단어의 첫 글자를 대문자로 표기하는 방법
 - 이 방법은 낙타의 등처럼 한 글자가 대문자로 표기되기 때문에 카멜 표기법으로 부르게 됨

ex) 프로젝트 명
 - khJavaProject.java

ex) 변수 명
 - int heroHp
 - String myName

ex) 메소드 명
 - public String createMyName(){}

2. 파스칼 표기법
 - 이 방식은 카멜 표기법과 유사하지만 더욱 더 단순한 표기법
 - 표기 방법은 모든 단어의 첫 글자만을 대문자로 표현하고, 나머지는 소문자로 표기 함

ex) 클래스 명
 - class HelloWorld


@실행용 클래스
 - 해당 프로그램을 실행하기 위한 용도의 클래스
 - 즉, 기능제공용 클래스를 사용하기 위한 클래스
 - main 메소드가 포함되어 있는 클래스

@기능제공용 클래스
 - 오직 기능을 제공하기 위한 클래스
 - main 메소드가 포함되어 있지 않은 클래스

@숫자와 문자
 - 자바와 같은 프로그래밍에서는 숫자와 문자는 무엇보다도 많이 사용 하게 됨
   그러므로 우리는 자바에서 어떻게 숫자를 표현하고 문자를 표현하는지 기본 적으로 숙지하고 있어야 함
	* 정수형, 실수형, 문자형, 문자열


@변수
 - 변하는 데이터
   프로그래밍적 의미 : 데이터를 담을 수 있는 공간(공간에 담긴 값이 변할 수 있기 때문에 변수라고 함)

 - 변수를 만들기 위해서는 선행으로 자료형(데이터형)을 알아야 함


@기본 자료형
논리형 : 하나의 true, false를 표현하는 데이터 형 (boolean 1Byte)

정수형 : 하나의 정수값을 표현하는 데이터형
	-byte(1Byte) : -127 ~ 127
	-short(2Byte) : -32658 ~ 32767
	-int(4Byte) : -214783648 ~ 214748647
	-long(8Byte) : -2^63 ~ 2^64-1

실수형 : 하나의 실수값을 표현하는데  사용
	-float(4Byte)
	-double(8Byte)

문자형 : 한개의 문자를 저장하는데 사용
	-char(2Byte) : 0 ~ 65,535

문자열형 : 하나의 문자열을 저장하는데 사용
	-String : 문자열을 저장하기 위해 만든 특수한 형태의 자료형


@변수 선언
 - 변수를 선언하기 위해서는 3개를 작성 해야함

	int a; 

 논리형 변수 선언 - Boolean bool;
 문자형 변수 선언 - char ch;
 정수형 변수 선언 - byte bnum; short snum; int inum; long lnum;
 실수형 변수 선언 - float fnum; double dnum;
 문자열 변수 선언 - String str;

@변수 이름 명명 규칙 

1. 대소문자가 구분되며 길이 제한이 없음
2. 예약어를 사용하면 안됨
3. 숫자로 시작하면 안됨
	-숫자는 사용해도 되지만 시작은 안됨
4. 특수문자는 _ $만 허용
5. 낙타표기법 사용
6. 한글 이름은 지양
7. 의미있는 이름으로 작성


@변수 초기화
 - 생선된 변수의 값을 대입

1. 생성과 동시에 값 대입 (초기화)
int age = 20;

2. 생성 후 값 대입;

int age; 
age=20;

@입력 받아서 변수에 대입하기 (Scanner 사용)

